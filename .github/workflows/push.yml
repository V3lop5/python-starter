name: Push

on:
  push:
  
jobs:
  # Inspect the information that is accessible in each context
  # https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log-file
  # You can delete this section
  jobinfo:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
     
  # Check linting
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' 
          architecture: 'x64' 
                
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: test-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements**.txt') }}
          
      - name: Install requirements
        run: |
          pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt -e .
      
      - name: flake8 Lint
        uses: reviewdog/action-flake8@v3
        with:
          github_token: ${{ github.token }}   
     
     
  # Checks if all tests pass   
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' 
          architecture: 'x64' 
                
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: test-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements**.txt') }}
          
      - name: Install requirements
        run: |
          pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt -e .
            
          
      - name: Run tests
        run: |
          pytest --cov=./ --cov-report=xml ./tests
                
            
      - name: Upload tests results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: coverage.xml
          
    
  uplaod_test_results:
    needs: test 
    runs-on: ubuntu-latest
    name: "Upload test results @ main"
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download tests results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
    
  # Test if project still runs on every os          
  test_build:
    needs: [test, lint]
    runs-on: ${{ matrix.os }}
    name: Build with ${{ matrix.py }} @ ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        py: ["3.7", "3.8", "3.9"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' 
          architecture: 'x64' 
                
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{matrix.os}}-${{ matrix.py }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements**.txt') }}
          
      - name: Install requirements
        run: |
          pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt -e .
            
          
      - name: Run tests
        run: |
          pytest ./tests
        
        
  dev_deploy:
    needs: [test, lint, test_build] 
    runs-on: ubuntu-latest
    name: "Dev deploy @ main"
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Hello
        runs: |
          echo "Hello World!"
            
        